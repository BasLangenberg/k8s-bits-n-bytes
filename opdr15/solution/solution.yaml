apiVersion: v1
kind: Secret
metadata:
  name: mongodb
type: Opaque
stringData:
  MONGO_INITDB_ROOT_USERNAME: root
  MONGO_INITDB_ROOT_PASSWORD: Dummy_123
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-express
type: Opaque
stringData:
  ME_CONFIG_MONGODB_SERVER: mongodb
  ME_CONFIG_MONGODB_ADMINUSERNAME: root
  ME_CONFIG_MONGODB_ADMINPASSWORD: Dummy_123
---
apiVersion: v1
kind: Secret
metadata:
  name: rate-training
type: Opaque
stringData:
  SPRING_DATA_MONGODB_URI: mongodb://root:Dummy_123@mongodb:27017/training?authSource=admin
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: do-block-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:4.0
        ports:
        - containerPort: 27017
        envFrom:
          - secretRef:
              name: mongodb
        volumeMounts:
          - mountPath: /data/db
            name: mongodb-data
        livenessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 30
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017

---
apiVersion: v1
kind: Pod
metadata:
  name: mongo-express
  labels:
    app: mongo-express
spec:
  containers:
  - name: mongo-express
    image: mongo-express
    ports:
      - containerPort: 8081
    envFrom:
      - secretRef:
          name: mongo-express
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
spec:
  selector:
    app: mongo-express
  ports:
  - port: 80
    targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rate-training
spec:
  selector:
    matchLabels:
      app: rate-training
  replicas: 2
  template:
    metadata:
      labels:
        app: rate-training
    spec:
      containers:
      - name: rate-training
        image: ninckblokje/ratetraining:1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - secretRef:
            name: rate-training
        livenessProbe:
          httpGet:
            path: /actuator/info
            port: 8080
          initialDelaySeconds: 40
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 40
---
apiVersion: v1
kind: Service
metadata:
  name: rate-training
spec:
  selector:
    app: rate-training
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rate-training-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: rate-training.ninckblokje.bnb
    http:
      paths:
      - path: /
        backend:
          serviceName: rate-training
          servicePort: 80